{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","generateMessage","textOfMessage","type","message","createElement","dataset","qa","className","innerText","append","firstPromise","Promise","resolve","reject","clicked","addEventListener","e","button","setTimeout","secondPromise","preventDefault","thirdPromise","leftClick","rigthClick","then","result","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAgBC,EAAeC,GAChCC,IAAAA,EAAUL,SAASM,cAAc,OAEvCD,EAAQE,QAAQC,GAAK,eACrBH,EAAQI,UAAYL,EACpBC,EAAQK,UAAYP,EACpBJ,EAAKY,OAAON,GAGd,IAAMO,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACrCC,IAAAA,GAAU,EAEdhB,SAASiB,iBAAiB,QAAS,SAACC,GACjB,IAAbA,EAAEC,SACJH,GAAU,EACVF,EAAQ,iCAMPE,GACHI,WAAW,WAAML,OAAAA,EAHG,+BAGoB,OAItCM,EAAgB,IAAIR,QAAQ,SAACC,EAASC,GAC1Cf,SAASiB,iBAAiB,QAAS,SAACC,GACjB,IAAbA,EAAEC,QACJL,EAAQ,iCAIZd,SAASiB,iBAAiB,cAAe,SAACC,GACxCA,EAAEI,kBAEgB,IAAdJ,EAAEC,QACJL,EAAQ,mCAKRS,EAAe,IAAIV,QAAQ,SAACC,EAASC,GACrCS,IAAAA,GAAY,EACZC,GAAa,EAEjBzB,SAASiB,iBAAiB,QAAS,SAACC,GACjB,IAAbA,EAAEC,SACJK,GAAY,GAGVA,GAAaC,GACfX,EAAQ,gCAIZd,SAASiB,iBAAiB,cAAe,SAACC,GACxCA,EAAEI,iBAEFG,GAAa,EAETD,GAAaC,GACfX,EAAQ,kCAKdF,EACGc,KAAK,SAAAC,GAAUzB,OAAAA,EAAgByB,EAAQ,aACvCC,MAAM,SAAAC,GAAS3B,OAAAA,EAAgB2B,EAAO,aAEzCR,EACGK,KAAK,SAAAC,GAAUzB,OAAAA,EAAgByB,EAAQ,aACvCC,MAAM,SAAAC,GAAS3B,OAAAA,EAAgB2B,EAAO,aAEzCN,EACGG,KAAK,SAAAC,GAAUzB,OAAAA,EAAgByB,EAAQ,aACvCC,MAAM,SAAAC,GAAS3B,OAAAA,EAAgB2B,EAAO","file":"main.336236ea.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction generateMessage(textOfMessage, type) {\n  const message = document.createElement('div');\n\n  message.dataset.qa = 'notification';\n  message.className = type;\n  message.innerText = textOfMessage;\n  body.append(message);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let clicked = false;\n\n  document.addEventListener('click', (e) => {\n    if (e.button === 0) {\n      clicked = true;\n      resolve('First promise was resolved');\n    }\n  });\n\n  const rejectMessage = 'First promise was rejected';\n\n  if (!clicked) {\n    setTimeout(() => reject(rejectMessage), 3000);\n  }\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', (e) => {\n    if (e.button === 0) {\n      resolve('Second promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    if (e.button === -1) {\n      resolve('Second promise was resolved');\n    }\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let leftClick = false;\n  let rigthClick = false;\n\n  document.addEventListener('click', (e) => {\n    if (e.button === 0) {\n      leftClick = true;\n    }\n\n    if (leftClick && rigthClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    rigthClick = true;\n\n    if (leftClick && rigthClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then(result => generateMessage(result, 'success'))\n  .catch(error => generateMessage(error, 'warning'));\n\nsecondPromise\n  .then(result => generateMessage(result, 'success'))\n  .catch(error => generateMessage(error, 'warning'));\n\nthirdPromise\n  .then(result => generateMessage(result, 'success'))\n  .catch(error => generateMessage(error, 'warning'));\n"]}